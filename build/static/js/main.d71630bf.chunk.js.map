{"version":3,"sources":["components/Intropage.js","components/Option.js","components/Question.js","components/QuestionsPage.js","App.js","index.js","components/blobTop.svg","components/blobBottom.svg"],"names":["Intropage","props","react_default","a","createElement","src","blobTop","className","alt","onClick","event","handleStart","onChange","value","blobBottom","Option","optionClass","isCorrect","isHeld","isComplete","concat","optionClicked","Question","shuffledOptions","arr","i","j","Math","floor","random","temp","shuffleArray","question","correct_answer","Object","toConsumableArray","incorrect_answers","_React$useState","React","useState","map","option","id","nanoid","_React$useState2","slicedToArray","options","setOptions","useEffect","isCorrectAttempt","some","isAttempted","handleChange","qid","optionElements","key","prevOptions","prevOption","objectSpread","QuestionsPage","questions","setQuestions","_React$useState3","_React$useState4","setIsComplete","url","art","politics","geography","history","sports","fetch","category","then","res","json","data","results","item","questionElements","prevQuestions","prevQuestion","every","filter","length","App","isGameOn","appState","setAppState","shouldStart","shouldReset","target","prevAppState","type","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d71630bf.chunk.js","sourcesContent":["import React from 'react'\r\nimport blobTop from './blobTop.svg'\r\nimport blobBottom from './blobBottom.svg'\r\n\r\nexport default function Intropage(props) {\r\n\r\n\treturn (\r\n\t\t<main>\r\n\t\t\t<img src={blobTop} className = \"blob-top\" alt=\"blobTop\"/>\r\n\t\t\t\r\n\t\t\t<div className=\"quizzical\">\r\n\t\t\t\t<h1>Quizzical</h1>\r\n\t\t\t\t<h4>Created by Vijaypal Singh Negi</h4>\r\n\r\n\t\t\t\t<button className=\"start\" onClick={event => props.handleStart(event, true, false)}>Start quiz</button>\r\n\r\n\t\t\t\t<select className=\"category\" onChange={event => props.handleStart(event, false, false)}>\r\n\t\t\t\t\t<option value = \"select\">--Select category--</option>\r\n\t\t\t\t\t<option value=\"art\">Art</option>\r\n\t\t\t\t\t<option value=\"geography\">Geography</option>\r\n\t\t\t\t\t<option value=\"history\">History</option>\r\n\t\t\t\t\t<option value=\"politics\">Politics</option>\r\n\t\t\t\t\t<option value=\"sports\">Sports</option>\r\n\t\t\t\t</select>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<img src={blobBottom} className = \"blob-bottom\" alt=\"blobBottom\"/>\r\n\r\n\t\t</main>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Option(props) {\r\n\tvar optionClass = ''\r\n\r\n\tif(props.isCorrect) {\r\n\t\toptionClass = 'option-held'\r\n\t} else if (props.isHeld && !props.isCorrect) {\r\n\t\toptionClass = 'option-wrong'\r\n\t} else {\r\n\t\toptionClass = 'option'\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!props.isComplete && <div \r\n\t\t\t\tclassName={`option${props.isHeld?'-held':''}`} \r\n\t\t\t\tonClick={props.optionClicked}\r\n\t\t\t>\r\n\t\t\t\t{props.value}\r\n\t\t\t</div>}\r\n\t\t\t{props.isComplete && <div \r\n\t\t\t\tclassName={optionClass} \r\n\t\t\t>\r\n\t\t\t\t{props.value}\r\n\t\t\t</div>}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport Option from './Option.js'\r\nimport {nanoid} from 'nanoid'\r\n\r\nexport default function Question(props) {\r\n\r\n\tconst shuffledOptions = shuffleArray([\r\n\t\tprops.question.correct_answer,\r\n\t\t...props.question.incorrect_answers\r\n\t])\r\n\r\n\tconst [options, setOptions] = React.useState(shuffledOptions.map(option => {\r\n\t\treturn createOption(option)\r\n\t}))\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst isCorrectAttempt = options.some(option => option.isHeld && option.isCorrect)\r\n\t\tconst isAttempted = options.some(option => option.isHeld)\r\n\t\tprops.handleChange(props.question.qid, isAttempted, isCorrectAttempt)\r\n\t},[options])\r\n\r\n\tfunction createOption(value) {\r\n\t\treturn {\r\n\t\t\t\"value\": value,\r\n\t\t\t\"id\": nanoid(),\r\n\t\t\t\"isHeld\": false,\r\n\t\t\t\"isCorrect\": value === props.question.correct_answer\r\n\t\t}\r\n\t}\r\n\r\n\tconst optionElements = options.map(option => {\r\n\t\treturn <Option \r\n\t\t\t\t\tkey={nanoid()} \r\n\t\t\t\t\tvalue={option.value} \r\n\t\t\t\t\tisHeld={option.isHeld}\r\n\t\t\t\t\tisCorrect = {option.isCorrect}\r\n\t\t\t\t\tisComplete={props.isComplete}\r\n\t\t\t\t\toptionClicked={() => optionClicked(option.id)}\r\n\t\t\t\t/>\r\n\t})\r\n\r\n\tfunction shuffleArray(arr) {\r\n\t    for (let i = 3; i > 0; i--) {\r\n\t        const j = Math.floor(i * Math.random())\r\n\t        let temp = arr[i]\r\n\t        arr[i] = arr[j]\r\n\t        arr[j] = temp\r\n\t    }\r\n\t   \treturn arr\r\n\t} \r\n\r\n\tfunction optionClicked(id) {\r\n\r\n\t\tsetOptions(prevOptions => prevOptions.map(prevOption => {\r\n\t\t\treturn {\r\n\t\t\t\t...prevOption,\r\n\t\t\t\t\"isHeld\": !prevOption.isHeld && id === prevOption.id ? true : false\r\n\t\t\t}\r\n\t\t}))\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"question\">\r\n\t\t\t<p>{props.question.question}</p>\r\n\t\t\t<div className=\"options\">\r\n\t\t\t\t{optionElements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport Question from './Question'\r\nimport blobTop from './blobTop.svg'\r\nimport blobBottom from './blobBottom.svg'\r\nimport {nanoid} from 'nanoid'\r\n \r\nexport default function QuestionsPage(props) {\r\n\r\n\tconst [questions, setQuestions] = React.useState([])\r\n\tconst [isComplete, setIsComplete] = React.useState(false)\r\n\tconst url = {\r\n\t\t\"art\": \"https://opentdb.com/api.php?amount=7&category=25&difficulty=easy&type=multiple\",\r\n\t\t\"politics\": \"https://opentdb.com/api.php?amount=7&category=24&difficulty=easy&type=multiple\",\r\n\t\t\"geography\": \"https://opentdb.com/api.php?amount=7&category=22&difficulty=easy&type=multiple\",\r\n\t\t\"history\": \"https://opentdb.com/api.php?amount=7&category=23&difficulty=easy&type=multiple\",\r\n\t\t\"sports\": \"https://opentdb.com/api.php?amount=7&category=21&difficulty=easy&type=multiple\"\r\n\t}\r\n\r\n\tReact.useEffect(() => {\r\n\t\tfetch(url[props.category])\r\n\t\t.then(res => res.json())\r\n\t\t.then(data => setQuestions(data.results.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\t...item,\r\n\t\t\t\t\"qid\": nanoid(),\r\n\t\t\t\t\"isAttempted\": false,\r\n\t\t\t\t\"isCorrect\": false\r\n\t\t\t}\r\n\t\t})))\r\n\t }, [])\r\n\r\n\tconst questionElements = questions.map(question => {\r\n\t\treturn <Question \r\n\t\t\tkey={question.qid} \r\n\t\t\tquestion={question} \r\n\t\t\thandleChange={handleChange}\r\n\t\t\tisComplete={isComplete}\r\n\t\t/>\r\n\t})\r\n\r\n\tfunction handleSubmit() {\r\n\t\tsetIsComplete(questions.every(question => question.isAttempted))\r\n\t}\r\n\r\n\tfunction handleChange(qid, isAttempted, isCorrectAttempt) {\r\n\t\tsetQuestions(prevQuestions => prevQuestions.map(prevQuestion => {\r\n\t\t\treturn {\r\n\t\t\t\t...prevQuestion,\r\n\t\t\t\t\"isAttempted\": qid === prevQuestion.qid? isAttempted: prevQuestion.isAttempted,\r\n\t\t\t\t\"isCorrect\": qid === prevQuestion.qid? isCorrectAttempt: prevQuestion.isCorrect,\r\n\t\t\t} \r\n\t\t}))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<main>\r\n\t\t\t<img src={blobTop} className = \"blob-top-questions\" alt=\"blobTop\"/>\r\n\r\n\t\t\t<div className=\"question-list\">\r\n\t\t\t\t{questionElements}\r\n\r\n\t\t\t\t{!isComplete && <button \r\n\t\t\t\t\tclassName=\"check-answers\"\r\n\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t>\r\n\t\t\t\t\tCheck Answers\r\n\t\t\t\t</button>}\r\n\r\n\t\t\t\t{isComplete && <div className=\"footer\">\r\n\t\t\t\t\t<div className=\"result\">\r\n\t\t\t\t\t\tYou scored {\r\n\t\t\t\t\t\t\tquestions.filter(question => question.isCorrect).length\r\n\t\t\t\t\t\t}/{\r\n\t\t\t\t\t\t\tquestions.length\r\n\t\t\t\t\t\t} correct answers!\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName=\"play-again\"\r\n\t\t\t\t\t\tonClick={props.handleStart}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tPlay Again\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>}\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<img src={blobBottom} className = \"blob-bottom-questions\" alt=\"blobBottom\"/>\r\n\r\n\t\t</main>\r\n\t)\r\n}\r\n","import React from 'react'\nimport Intropage from './components/Intropage'\nimport QuestionsPage from './components/QuestionsPage'\n\nexport default function App() {\n\n\tconst [appState, setAppState] = React.useState({\"isGameOn\": false, \"category\": \"select\"})\n\n\tfunction handleStart(event, shouldStart, shouldReset) {\n\t\tconst category = event.target.value\n\t\tsetAppState(prevAppState => {\n\t\t\treturn {\n\t\t\t\t\"isGameOn\": shouldReset ? false : (appState.category !== \"select\"? shouldStart: false),\n\t\t\t\t\"category\": shouldReset ? \"select\" : (event.type === \"click\" ? appState.category : category)\n\t\t\t}\n\t\t})\n\t}\n\t\n\treturn (\n\t\t<div>\n\t\t\t{!appState.isGameOn && <Intropage handleStart={handleStart}/>},\n\t\t\t{appState.isGameOn && <QuestionsPage category = {appState.category} handleStart={(event) => handleStart(event, false, true)}/>}\n\t\t</div>\n\t)\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/blobTop.cf29fe76.svg\";","module.exports = __webpack_public_path__ + \"static/media/blobBottom.cce06133.svg\";"],"sourceRoot":""}